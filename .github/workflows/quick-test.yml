name: CI/CD Testing-Pipeline
on:
  workflow_dispatch:
  #Trigger the workflow on pull req from the prod br
  pull_request:
    types: [closed]
    branches:
      - feature/manual-entry


jobs:
  #Test's job
  test:
    name: Test
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    services:
      postgres_db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: foodmgt
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        ports:
          - 5436:5432
        # needed because the postgres container does not provide a  healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 19
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '19'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Run Tests
      - name: Run Tests
        run: mvn -B test

      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2



  # Package and  Deploy
  package_and_deploy:
    needs: test
    name: Package and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        #checkout code
        uses: actions/checkout@v3
        #Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
        #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Build the application using Maven
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: |
          echo 'The branch name is' $BRANCH_NAME
          ls
          pip install -r requirements.txt
          python config.py

        shell: bash
        env:
          SSH_KEY: ${{ secrets.LOCALHOST_SSH_KEY }}
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key
          BRANCH_NAME: ${{ github.ref }}



  # Delete jar file
  delete-artifact:
    needs: package_and_deploy
    name: Cleanup
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Delete Jar File
        run: rm -rf /home/runner/work/foodmgt/foodmgt/foodmgt-0.0.1-SNAPSHOT.jar
        shell: bash

